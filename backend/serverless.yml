service: my-serverless-app

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1 # Optional: AWS-Region
  environment:
      DB_HOST: database-1.czm0kq64ypq1.eu-central-1.rds.amazonaws.com
      DB_USER: admin
      DB_PASSWORD: Awshsgm24!
      DB_NAME: wawi
      NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000
      RESPONSE_LIEFERANTEN: ${self:custom.jsonImports.jsonLieferanten}

functions:

  #Eingangs-Wrapper
  validatedGetLieferantFE:
    handler: src/validation/wrapper.validatedGetLieferantFE
    events:
      - http:
          path: validatedGetLieferantFE
          method: post

  validatedGetMatLief:
    handler: src/validation/wrapper.validatedGetMatLief
    events:
      - http:
          path: validatedGetMatLief
          method: post

  validatedBuchung:
    handler: src/validation/wrapper.validatedGetBuchung
    events:
      - http:
          path: validatedBuchung
          method: post

  validatedInvKorrWE:
    handler: src/validation/wrapper.validateGetInvKorrWE
    events:
      - http:
          path: validatedInvKorrWE
          method: post

  validateUpsertRezept:
    handler: src/validation/wrapper.validateUpsertRezept
    events:
      - http:
          path: validateUpsertRezept
          method: post

  validateHerstellung:
    handler: src/validation/wrapper.validateHerstellung
    events:
      - http:
          path: validateHerstellung
          method: post

  #Bestellung 
  handlerGetLieferanten:
    handler: src/handler/Einkauf/handlerGetLieferanten.getLieferanten
    events:
      - http:
          path: getLieferanten
          method: get

  #Inventarabfrage
  handlerInventar:
    handler: src/handler/Inventar/handlerInventar.handlerInventar
    events:
      - http:
          path: handlerInventar
          method: get

  #Wareneingang
  handlerWareneingang:
    handler: src/handler/Wareneingang/handlerWareneingang.handlerWareneingang
    events:
      - http:
          path: handlerWareneingang
          method: get

  #Herstellung
  handlergetRezept:
    handler: src/handler/Herstellung/handlerGetRezept.handlerGetRezept
    events:
      - http:
          path: handlerGetRezept
          method: get

  handlerHerstellung:
    handler: src/handler/Herstellung/Herstellung/handlerHerstellung.handlerHerstellung
    events:
      - http:
          path: handlerHerstellung
          method: post

  #Inventarkorrektur
  handlerGetInvKorr:
    handler: src/handler/Inventarkorrektur/handlerGetInvKorr.handlerGetInvKorr
    events:
      - http:
          path: handlerGetInvKorr
          method: get

  #Sender
  responseSender:
    handler: src/responseSender/responseSender.responseSender
    events:
      - http:
          path: responseSender
          method: post


  #Material des Lieferanten und Lieferant 체bergeben und
  #Mat, Lief und Link aus DB holen und zur체cksenden

plugins:
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverless-offline:
    log: true
    httpPort: 3001 # Der lokale Server l채uft auf Port 3001
    noPrependStageInUrl: true # Kein Prefix f체r Umgebungen (z. B. dev)

  jsonImports:
    basePath: ./src/responseSender/JSONs
    jsonLieferanten: ${file(${self:custom.jsonImports.basePath}/handlergetLieferanten.json)}


package:
  individually: true # Optional: Nur genutzte Dateien und Dependencies in das Deployment-Paket aufnehmen
