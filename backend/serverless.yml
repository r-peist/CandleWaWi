service: my-serverless-app

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1 # Optional: AWS-Region
  environment: # Optional: Umgebungsvariablen
    NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000

functions:
  #Einkauf trigger + Lieferanten anzeigen lassen
  getLieferanten:
    handler: src/DBHandler/handlerGetLieferanten.getLieferanten
    events:
      - http:
          path: getLieferanten
          method: get

  sendLieferanten:
    handler: src/FrontendData/sendLieferanten.sendLieferanten
    events:
      - http:
          path: sendLieferanten
          method: post
          cors: true

  #Ausgewählten Lieferanten an DB übergeben und Mats für diesen zurückschicken
  getLieferantFE:
    handler: src/FrontendData/getLieferantFE.getLieferantFE
    events:
      - http:
          path: getLieferantenFE
          method: get

  getMatLief:
    handler: src/DBHandler/handlerGetMatLief.getMatLief
    events:
      - http:
          path: getMatLief
          method: get

  sendMatLief:
    handler: src/FrontendData/sendMatLief.sendMatLief
    events:
      - http:
          path: sendMatLief
          method: post

  #Material des Lieferanten und Lieferant übergeben und
  #Mat, Lief und Link aus DB holen und zurücksenden

plugins:
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverless-offline:
    httpPort: 3000 # Der lokale Server läuft auf Port 3000
    noPrependStageInUrl: true # Kein Prefix für Umgebungen (z. B. dev)

package:
  individually: true # Optional: Nur genutzte Dateien und Dependencies in das Deployment-Paket aufnehmen
